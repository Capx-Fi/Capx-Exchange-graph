type Order @entity {
  id: ID!
  initiator: Bytes!
  tokenGive: Bytes!
  tokenGet: Bytes!
  tokenGiveDecimal: BigInt!
  tokenGetDecimal: BigInt!
  tokenGiveTicker: String!
  tokenGetTicker: String!
  amountGive: BigInt!
  amountGet: BigInt!
  expiryTime: BigInt!
  direction: Boolean!
  cancelled: Boolean!
  amountReceived: BigInt!
  amountSent: BigInt!
  price: BigDecimal!
  fulfillOrderTimestamp: BigInt!
  fullFiller: [FullFiller!]! @derivedFrom(field: "order")
}

type FullFiller @entity {
  id: ID!
  address: Bytes!
  amount: BigInt!
  order: Order!
}

type TradeData @entity {
  id: ID!
  positions : [Position!]! @derivedFrom(field: "trade")
}

type Position @entity {
  id: ID!
  timestamp: BigInt!
  tradePrice: BigDecimal!
  trade: TradeData!
}

type User @entity {
  id: ID!
  lockedBalance: [LockedBalance!]! @derivedFrom(field: "user")
  totalBalance: [TotalBalance!]! @derivedFrom(field: "user")
}

type LockedBalance @entity{
  id: ID!
  assetID: Bytes!
  lockedValue: BigInt!
  user: User!
}

type TotalBalance @entity{
  id: ID!
  assetID: Bytes!
  totalValue: BigInt!
  user: User!
}

type Asset @entity{
  id: ID!
  tokenTicker: String!
  tokenDecimal: BigInt!
}